---
spring:
  profiles: test
  jpa.properties.hibernate.id.new_generator_mappings: false
  jpa.hibernate.enable_lazy_load_no_trans: true
  jpa.properties.hibernate.enable_lazy_load_no_trans: true

  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: 'jdbc:mysql://localhost/CFBroker?autoReconnect=true'
    username: root
    password:

  credhub:
    url: https://localhost:9000
    oauth2.registration-id: credhub-client
  security:
    oauth2:
      client:
        registration:
          credhub-client:
            provider: uaa
            client-id: credhub_client
            client-secret: secret
            authorization-grant-type: client_credentials
          bosh-client:
            provider: uaa
            client-id: credhub_client
            client-secret: secret
            authorization-grant-type: client_credentials
        provider:
          uaa:
            token-uri: http://localhost:8081/uaa/oauth/token

com.swisscom.cloud.sb.broker:
  credhub:
    url: https://localhost:9000
    oauth2:
      registration-id: credhub-client
  services.bosh.client:
    boshBaseUrl: https://192.168.50.6:25555
    boshDirectorUsername: admin
    boshDirectorPassword: 74v98dv1cuofsj4o8mct

osb.credential.store: credhub

com.swisscom.cloud.sb.broker.security.platformUsers:
  - username: cc_admin
    password: change_me
    role: CF_ADMIN
    platformId: 00000000-0000-0000-0000-000000000000
  - username: cc_ext
    password: change_me
    role: CF_EXT_ADMIN
    platformId: 00000000-0000-0000-0000-000000000000

com.swisscom.cloud.sb.broker.service.mariadb:
  nameOfDefault: "default"
  clusters:
    - name: "default"
      driver: com.mysql.cj.jdbc.Driver
      vendor: mysql
      host: 127.0.0.1
      port: 3306
      adminUser: 'root'
      adminPassword:
      databasePrefix: 'cfdb_'
      shieldAgentUrl: 'shield-agent:5444'
      discoveryURL: "http://localhost:8080/v2/api-docs"
      bindir: '/var/vcap/packages/shield-mysql/bin'
      dashboardPath:

com.swisscom.cloud.sb.broker.service.test-bosh-based-service:
  retryIntervalInSeconds: 42
  genericConfigs:
    - templateName: test
      type: cloud

com.swisscom.cloud.sb.broker.bosh.credhub:
  enable: false
  url: https://localhost:9000
  oauth2.registration-id: bosh-client

com.swisscom.cloud.sb.broker.serviceDefinitions: [
{
  "guid": "7a495d86-73dc-4903-9b0b-140c9b011610",
  "name": "credHubTest",
  "description": "CredHub 2.0.0 Test",
  "bindable": true,
  "asyncRequired": false,
  "internalName": "credHub",
  "displayIndex": 1,
  "metadata": {
    "version": "2.0.0",
    "displayName": "CredHub",
    "bullets": [
      "Secure Store"
    ]
  },
  "plans": [
  {
    "guid": "0ef19631-1212-47cc-9c77-22d78ddaae3a",
    "name": "test",
    "description": "CredHub 2.0.0 Test",
    "free": false,
    "displayIndex": 0,
    "metadata": {
      "displayName": "test"
    }
  }
  ]
},
{
  "guid": "d40d962e-0890-43f1-b1a1-d454277346ff",
  "name": "DummySystemBackup",
  "description": "A Service Provider that provides System Backups",
  "bindable": true,
  "asyncRequired": false,
  "internalName": "dummySystemBackup",
  "displayIndex": 1,
  "metadata": {
    "version": "2.0.0",
    "displayName": "DummySystemBackup",
    "bullets": [
      "Secure Store"
    ]
  },
  "plans": [
  {
    "guid": "47273c6a-ff8b-40d6-9981-2b25663718a1",
    "name": "test",
    "description": "DummySystemBackup",
    "free": false,
    "displayIndex": 0,
    "metadata": {
      "displayName": "test"
    }
  }
  ]
},
{
  "guid": "7a495d86-73dc-4903-9b0b-140c9b011610",
  "name": "credHubTest",
  "description": "CredHub 2.0.0 Test",
  "bindable": true,
  "asyncRequired": false,
  "internalName": "credHub",
  "displayIndex": 1,
  "metadata": {
    "version": "2.0.0",
    "displayName": "CredHub",
    "bullets": [
      "Secure Store"
    ]
  },
  "plans": [
  {
    "guid": "0ef19631-1212-47cc-9c77-22d78ddaae3a",
    "name": "test",
    "description": "CredHub 2.0.0 Test",
    "free": false,
    "displayIndex": 0,
    "metadata": {
      "displayName": "test"
    }
  }
  ]
}, {
  "guid": "781e8f8c-c753-4a93-95eb-17c1f745b229",
  "name": "redisent",
  "description": "Redis Enterprise v3.2.3",
  "bindable": true,
  "asyncRequired": true,
  "internalName": "redisEnterprise",
  "displayIndex": 1,
  "metadata": {
    "version": "3.2.3",
    "displayName": "Redis Enterprise"
  },
  "plans": [
  {
    "guid": "ea4b1b7d-3060-4ac6-836b-e134de0e7d9b",
    "name": "large",
    "description": "Redis Sentinel Cluster with 3 data bearing nodes with 8 GB memory, 8 GB storage, unlimited concurrent connections",
    "templateId": "redisha-bosh-template-v2",
    "free": false,
    "displayIndex": 0,
    "containerParams": [
    {
      "template": "",
      "name": "plan",
      "value": "redis.large"
    },
    {
      "template": "",
      "name": "databases",
      "value": "32"
    },
    {
      "template": "",
      "name": "maxclients",
      "value": "60000"
    },
    {
      "template": "",
      "name": "vm_instance_type",
      "value": "redis.large"
    }
    ],
    "metadata": {
      "storageCapacity": "8GB",
      "memory": "8GB",
      "nodes": "3",
      "maximumConcurrentConnections": "unlimited",
      "dedicatedService": true,
      "highAvailability": true,
      "displayName": "large"
    }
  },
  {
    "guid": "ebe11e59-5261-4939-ac8f-0a35c3850b4e",
    "name": "xlarge",
    "description": "Redis Sentinel Cluster with 3 data bearing nodes with 16 GB memory, 16 GB storage, unlimited concurrent connections",
    "templateId": "redisha-bosh-template-v2",
    "free": false,
    "displayIndex": 1,
    "containerParams": [
    {
      "template": "",
      "name": "plan",
      "value": "redis.xlarge"
    },
    {
      "template": "",
      "name": "databases",
      "value": "32"
    },
    {
      "template": "",
      "name": "maxclients",
      "value": "60000"
    },
    {
      "template": "",
      "name": "vm_instance_type",
      "value": "redis.xlarge"
    }
    ],
    "metadata": {
      "storageCapacity": "16GB",
      "memory": "16GB",
      "nodes": "3",
      "maximumConcurrentConnections": "unlimited",
      "dedicatedService": true,
      "highAvailability": true,
      "displayName": "xlarge"
    }
  },
  {
    "guid": "7b71cf85-0e50-4509-af04-eafd3a6ad141",
    "name": "xxlarge",
    "description": "Redis Sentinel Cluster with 3 data bearing nodes with 32 GB memory, 32 GB storage, unlimited concurrent connections",
    "templateId": "redisha-bosh-template-v2",
    "free": false,
    "displayIndex": 2,
    "containerParams": [
    {
      "template": "",
      "name": "plan",
      "value": "redis.xxlarge"
    },
    {
      "template": "",
      "name": "databases",
      "value": "32"
    },
    {
      "template": "",
      "name": "maxclients",
      "value": "60000"
    },
    {
      "template": "",
      "name": "vm_instance_type",
      "value": "redis.xxlarge"
    }
    ],
    "metadata": {
      "storageCapacity": "32GB",
      "memory": "32GB",
      "nodes": "3",
      "maximumConcurrentConnections": "unlimited",
      "dedicatedService": true,
      "highAvailability": true,
      "displayName": "xxlarge"
    }
  }
  ],
  "tags": ["redis"]
}
]

com.swisscom.cloud.sb.broker.service.kubernetes.redis.v1:
  kubernetesRedisHost: test

com.swisscom.cloud.sb.broker.shield:
  baseUrl: 'http://localhost:8082'
  apiKey: 'api-key'
  agent: 'shield-agent:5444'
  jobPrefix: 'SB_CF_'
  targetPrefix: 'SB_CF_'
  storeName: 'local'
  retentionName: 'default'
  scheduleName: 'schedu'
  maxRetryBackup: 5
  username: admin
  password: 'password'
  maxNumberOfApiRetries: 3
  waitBetweenApiRetries: 1s

